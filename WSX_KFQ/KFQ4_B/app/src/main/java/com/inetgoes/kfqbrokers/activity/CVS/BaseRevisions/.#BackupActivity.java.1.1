package com.inetgoes.kfqbrokers.activity;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.Window;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.inetgoes.kfqbrokers.Constants;
import com.inetgoes.kfqbrokers.FangApplication;
import com.inetgoes.kfqbrokers.R;
import com.inetgoes.kfqbrokers.asynctast.HttpAsy;
import com.inetgoes.kfqbrokers.asynctast.PostExecute;
import com.inetgoes.kfqbrokers.manager.AppSharePrefManager;
import com.inetgoes.kfqbrokers.model.BackupInfo;
import com.inetgoes.kfqbrokers.utils.JacksonMapper;
import com.inetgoes.kfqbrokers.utils.L;
import com.inetgoes.kfqbrokers.view.CustomTitleBar;
import com.inetgoes.kfqbrokers.view.RightDeal;
import com.nostra13.universalimageloader.core.ImageLoader;


import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

/**
 * 客户资料
 */
public class BackupActivity extends Activity implements RightDeal {
    public static final String CUSTID = "custid";
    public static final String CUSTICON = "custicon";
    public static final String CUSTNAME = "custname";

    private int userid;   //经纪人id
    private int custid;   //对方用户id
    private String custicon;
    private String custname;

    private BackupInfo backupInfo;

    private ImageView client_icon;  //客户头像
    private TextView client_name;  //客户姓名
    private TextView client_phone;  //客户电话
    private ImageView client_sex;   //客户性别

    private View intent_edit, intent_area, intent_house, intent_huxing, intent_prop, layout_infobackup;
    private TextView infobackup;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        CustomTitleBar.getTitleBar_Backup(this, "详细资料", this);
        setContentView(R.layout.activity_backup);

        custid = getIntent().getIntExtra(CUSTID, 0);
        custicon = getIntent().getStringExtra(CUSTICON);
        custname = getIntent().getStringExtra(CUSTNAME);
        userid = AppSharePrefManager.getInstance(this).getLastest_login_id();

        initView();

        reqData(userid, custid);
    }

    private void initView() {
        client_icon = (ImageView) findViewById(R.id.client_icon);
        client_name = (TextView) findViewById(R.id.client_name);
        client_phone = (TextView) findViewById(R.id.client_phone);
        client_sex = (ImageView) findViewById(R.id.client_sex);

        if(!TextUtils.isEmpty(custicon)){
            ImageLoader.getInstance().displayImage(custicon,client_icon, FangApplication.options,FangApplication.animateFirstListener);
        }
        client_name.setText(custname);

        intent_edit = findViewById(R.id.intent_edit);
        intent_area = findViewById(R.id.intent_area);
        intent_house = findViewById(R.id.intent_house);
        intent_huxing = findViewById(R.id.intent_huxing);
        intent_prop = findViewById(R.id.intent_prop);
        layout_infobackup = findViewById(R.id.layout_infobackup);

        infobackup = (TextView) findViewById(R.id.info_backup);

        intent_edit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(BackupActivity.this,BackupSetActivity.class);
                intent.putExtra(BackupSetActivity.BACKUPINFO,backupInfo);
                intent.putExtra(BackupActivity.CUSTID,custid);
                startActivityForResult(intent, 411);
            }
        });
    }

    private void setData(BackupInfo backupInfo) {
        if (backupInfo == null) {
            return;
        }
        if (!backupInfo.isState()) {
            RelativeLayout textl = (RelativeLayout) intent_edit.findViewById(R.id.layout_item);
            textl.setVisibility(View.VISIBLE);
            ((TextView) intent_edit.findViewById(R.id.item_title)).setText("编辑客户资料");
            (intent_edit.findViewById(R.id.item_content)).setVisibility(View.INVISIBLE);

            backupInfo.setCustname(custname);
            return;
        }else{
            (intent_edit.findViewById(R.id.layout_item)).setVisibility(View.GONE);
        }
        if (!TextUtils.isEmpty(backupInfo.getCustphone())) {
            client_phone.setText(backupInfo.getCustphone());
        }
        if (!TextUtils.isEmpty(backupInfo.getCustname())) {
            client_name.setText(backupInfo.getCustname());
        }
        if (!TextUtils.isEmpty(backupInfo.getSex())) {
            client_sex.setVisibility(View.VISIBLE);
            String sex = backupInfo.getSex();
            if ("男".equals(sex)) {
                client_sex.setImageResource(R.drawable.boy);
            } else if ("女".equals(sex)) {
                client_sex.setImageResource(R.drawable.girl);
            }
        }

        setIntentView(intent_area, "意向区域", backupInfo.getIntent_area());

        setIntentView(intent_house, "意向房源", backupInfo.getIntent_fangname());

        setIntentView(intent_huxing, "意向户型", backupInfo.getIntent_huxing());

        setIntentView(intent_prop, "意向面积", backupInfo.getIntent_size());


        if (!TextUtils.isEmpty(backupInfo.getOthermark())) {
            layout_infobackup.setVisibility(View.VISIBLE);
            infobackup.setText("描述：" + backupInfo.getOthermark());
        }
    }

    private void setIntentView(View view, String title, String content) {
        if (TextUtils.isEmpty(content)) {
            return;
        }
        view.findViewById(R.id.layout_item).setVisibility(View.VISIBLE);
        ((TextView) view.findViewById(R.id.item_title)).setText(title);
        ((TextView) view.findViewById(R.id.item_content)).setText(content);
    }

    /**
     * @param brokerid 经纪人id
     * @param custid   对方用户id
     */
    private void reqData(final int brokerid, int custid) {
        Map<String, Object> map = new HashMap<>();
        map.put("brokerid", brokerid);
        map.put("custid", custid);

        new HttpAsy(new PostExecute() {
            @Override
            public void onPostExecute(String result) {
                L.LogI("barkup readata is " + result);
                if (TextUtils.isEmpty(result)) {
                    return;
                }
                try {
                    backupInfo = JacksonMapper.getObjectMapper().readValue(result, BackupInfo.class);

                    setData(backupInfo);

                    L.LogI("barkup readata is " + backupInfo.getMarkid());

                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }).execute(Constants.backupInfoUrl, map);

    }


    @Override
    public void deal() {
        Intent intent = new Intent(BackupActivity.this,BackupSetActivity.class);
        intent.putExtra(BackupSetActivity.BACKUPINFO, backupInfo);
        intent.putExtra(BackupActivity.CUSTID,custid);
        startActivityForResult(intent, 411);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if(requestCode == 411 && resultCode == 666){
            reqData(userid, custid);
        }
    }
}
