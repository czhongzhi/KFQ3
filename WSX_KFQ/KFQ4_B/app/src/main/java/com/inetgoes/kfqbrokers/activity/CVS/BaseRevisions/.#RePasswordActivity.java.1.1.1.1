package com.inetgoes.kfqbrokers.activity;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import android.util.Log;
import android.view.Display;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.inetgoes.kfqbrokers.Constants;
import com.inetgoes.kfqbrokers.R;
import com.inetgoes.kfqbrokers.asynctast.HttpAsy;
import com.inetgoes.kfqbrokers.asynctast.PostExecute;
import com.inetgoes.kfqbrokers.manager.AppSharePrefManager;
import com.inetgoes.kfqbrokers.utils.JacksonMapper;
import com.inetgoes.kfqbrokers.view.CustomTitleBar;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;

import cn.smssdk.EventHandler;
import cn.smssdk.SMSSDK;
import cn.smssdk.UserInterruptException;

/**
 * 重设密码界面
 */
public class RePasswordActivity extends Activity {

    private EditText edPhone;
    private EditText edAutocode;
    private Button butGetcode;
    private EditText edId;
    private EditText edPassword;
    private EditText edRepassword;
    private Button butRegister;
    private TextView appProtocol;
    private AlertDialog dialog_login;

    private EventHandler eHandler;

    private Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            int event = msg.arg1;
            int result = msg.arg2;
            Object data = msg.obj;

            Log.e("czhongzhi", "event -- " + event + " result --" + result);

            if (result == SMSSDK.RESULT_COMPLETE) {
                //短信注册成功后，返回MainActivity,然后提示新好友
                if (event == SMSSDK.EVENT_SUBMIT_VERIFICATION_CODE) {//提交验证码成功
                    //Toast.makeText(getApplicationContext(), "提交验证码成功", Toast.LENGTH_SHORT).show();

                    //调用方法提交用户注册信息 或 登录
                    final Map<String, Object> map = new HashMap<>();
                    //  map.put("phoneno", phString);
                    //  map.put("devicetype", "android");
                    //   map.put("devicetoken", AppSharePrefManager.getInstance(RePasswordActivity.this).getDevicetoken());
                    new HttpAsy(new PostExecute() {
                        @Override
                        public void onPostExecute(String result) {
                            Log.e("czhongzhi", result);
                            if (TextUtils.isEmpty(result)) {
                                Toast.makeText(RePasswordActivity.this, "网络获取异常", Toast.LENGTH_SHORT).show();
                                return;
                            }
                            String id = JacksonMapper.getInstance().onlyTNode(result, "userid");
                            //把用户id写入本地
                            AppSharePrefManager.getInstance(RePasswordActivity.this).setLastest_login_id(Integer.valueOf(id));

                            //聊天账号注册
                           // new RegOpenfire().execute(id);

                        }
                    }).execute(Constants.registerUrl, map);

                } else if (event == SMSSDK.EVENT_GET_VERIFICATION_CODE) {
                    //Toast.makeText(getApplicationContext(), "验证码已经发送", Toast.LENGTH_SHORT).show();

                    //开启dialog提示
                    showDialogSendCode();

                } else if (event == SMSSDK.EVENT_GET_SUPPORTED_COUNTRIES) {//返回支持发送验证码的国家列表
                    Toast.makeText(RePasswordActivity.this, "获取国家列表成功", Toast.LENGTH_SHORT).show();
                }
            } else {
                //关闭dialog提示
                if (dialog_login != null && dialog_login.isShowing())
                    dialog_login.dismiss();

                showDialogErroCode();

                if (event == SMSSDK.EVENT_GET_VERIFICATION_CODE && data != null && (data instanceof UserInterruptException)) {
                    // 由于此处是开发者自己决定要中断发送的，因此什么都不用做
                    return;
                }

                ((Throwable) data).printStackTrace();
                Throwable throwable = (Throwable) data;
                try {
                    JSONObject object = new JSONObject(throwable.getMessage());
                    String des = object.optString("detail");
                    if (!TextUtils.isEmpty(des)) {
                        Toast.makeText(RePasswordActivity.this, des, Toast.LENGTH_SHORT).show();
                        return;
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                //Toast.makeText(RegisterActivity.this, "验证码错误", Toast.LENGTH_SHORT).show();
            }
        }
    };


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        CustomTitleBar.getTitleBar(this, "重设密码", true, false);
        setContentView(R.layout.activity_re_password);
        initView();
        SMSSDK.registerEventHandler(eHandler);


    }

    private void initView() {

        edPhone = (EditText) findViewById(R.id.ed_phone);//电话号码

        edAutocode = (EditText) findViewById(R.id.ed_autocode);//验证码
        butGetcode = (Button) findViewById(R.id.but_getcode);//获取验证码按钮
        edId = (EditText) findViewById(R.id.ed_id);//身份证
        edPassword = (EditText) findViewById(R.id.ed_password);//新密码
        edRepassword = (EditText) findViewById(R.id.ed_repassword);//重设的密码
        butRegister = (Button) findViewById(R.id.but_register);//提交按钮

        appProtocol = (TextView) findViewById(R.id.app_protocol);//看房去服务协议

        butRegister.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(RePasswordActivity.this, RePasswordSuccessActivity.class));


            }
        });
    }


    /**
     * 开启验证码已发送dialog
     */
    private void showDialogSendCode() {
        AlertDialog.Builder builder2 = new AlertDialog.Builder(this, R.style.Dialog);
        final AlertDialog dialog = builder2.show();
        View view = LayoutInflater.from(this).inflate(R.layout.register_dialog_send, null);
        dialog.setContentView(view);
        mHandler.postDelayed(new Runnable() {
            @Override
            public void run() {
                if (dialog != null && dialog.isShowing())
                    dialog.dismiss();
            }
        }, 1500);
    }


    /**
     * 验证码错误
     */
    private void showDialogErroCode() {
        AlertDialog.Builder builder2 = new AlertDialog.Builder(this);
        final AlertDialog dialog = builder2.show();
        View view = LayoutInflater.from(this).inflate(R.layout.register_dialog_erro, null);
        view.findViewById(R.id.but).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (dialog != null && dialog.isShowing()) {
                    dialog.dismiss();
                }
            }
        });
        dialog.setContentView(view);
        Window dialogWindow = dialog.getWindow();
        dialogWindow.setGravity(Gravity.CENTER);
        WindowManager m = getWindowManager();
        Display d = m.getDefaultDisplay();
        WindowManager.LayoutParams p = dialogWindow.getAttributes();
        p.width = (int) (d.getWidth() * 0.95);
        dialogWindow.setAttributes(p);
    }
}
